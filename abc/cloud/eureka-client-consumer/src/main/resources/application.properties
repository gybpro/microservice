# \u5E94\u7528\u540D\u79F0
spring.application.name=eureka-client-consumer
# \u5E94\u7528\u670D\u52A1 WEB \u8BBF\u95EE\u7AEF\u53E3
server.port=8080

# eureka client\u5BA2\u6237\u7AEF\u914D\u7F6E
# \u8BBE\u7F6E\u6CE8\u518C\u670D\u52A1\u7684\u9ED8\u8BA4\u57DF
eureka.client.service-url.defaultZone=${EUREKASERVER:http://localhost:8761/eureka/}
# \u662F\u5426\u6CE8\u518C\u8FDBeureka\uFF0C\u9ED8\u8BA4true\uFF0C\u7279\u6B8A\u60C5\u51B5\u4E0B\u53EF\u4EE5\u8BBE\u4E3Afalse\uFF0C\u4E0D\u5F80eureka\u4E2D\u6CE8\u518C
eureka.client.register-with-eureka=true
# \u662F\u5426\u62C9\u53D6\u670D\u52A1\u5217\u8868\u5230\u672C\u5730\uFF0C\u62C9\u53D6\u63D0\u9AD8\u6548\u7387\u3001\u6027\u80FD\uFF0C\u4F46\u6709\u810F\u8BFB\u73B0\u8C61\u3002\u89C6\u60C5\u51B5\u51B3\u5B9A\u662F\u5426\u62C9\u53D6\uFF0C\u4E00\u822C\u62C9\u53D6\uFF0C\u9ED8\u8BA4\u62C9\u53D6\u3002
eureka.client.fetch-registry=true
# \u62C9\u53D6\u670D\u52A1\u5217\u8868\u95F4\u9694\u65F6\u95F4\uFF0C\u4E3A\u4E86\u7F13\u89E3\u810F\u8BFB\u95EE\u9898\uFF0C\u65F6\u95F4\u8D8A\u77ED\uFF0C\u810F\u8BFB\u8D8A\u5C11\uFF0C\u6027\u80FD\u8017\u8D39\u8D8A\u5927\uFF0C\u9ED8\u8BA430\u79D2\uFF0C\u8981\u6839\u636E\u5B9E\u9645\u60C5\u51B5\u8BBE\u7F6E
eureka.client.registry-fetch-interval-seconds=10

# eureka instance\u914D\u7F6E
# \u914D\u7F6E\u5B9E\u4F8Bid
eureka.instance.instance-id=${spring.application.name}:${server.port}
# \u663E\u793Aip
eureka.instance.prefer-ip-address=true
# \u5B9E\u4F8B\u7EED\u7EA6\u95F4\u9694
eureka.instance.lease-renewal-interval-in-seconds=10

# feign\u53EA\u662F\u5C01\u88C5\u4E86\u8FDC\u7A0B\u8C03\u7528\u7684\u529F\u80FD\uFF0C\u5E95\u5C42\u8FD8\u662Fribbon\uFF0C\u6240\u4EE5\u8BBE\u7F6E\u8D85\u65F6\u65F6\u95F4\u8FD8\u662F\u4FEE\u6539ribbon\u7684\u8D85\u65F6\u65F6\u95F4
# \u8BFB\u53D6\u8D85\u65F6\u65F6\u95F4\uFF0C\u9ED8\u8BA41s\u8D85\u65F6\u65F6\u95F4\u592A\u77ED\uFF0C\u5F53\u7F51\u7EDC\u4E0D\u597D\u65F6\u6839\u672C\u8BBF\u95EE\u4E0D\u4E86\uFF0C\u81F3\u5C112~3\u79D2\u8D85\u65F6\u65F6\u95F4
ribbon.ReadTimeout=3000
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF0C\u9ED8\u8BA41s\uFF0C\u540C\u6837\u81F3\u5C112~3s
ribbon.ConnectTimeout=3000

# \u914D\u7F6E\u6253\u5370Feign\u65E5\u5FD7\u4FE1\u606F
logging.level.com.high.springcloud.feign.ProviderProductFeign=debug

# \u5F00\u542Fhystrix\uFF0C\u5728F\u7248\u4E4B\u524D\u662F\u9ED8\u8BA4\u5F00\u542F\u7684\uFF0C\u56E0\u4E3A\u4E4B\u524D\u53EA\u6709Hystrix\u7194\u65AD\u7EC4\u4EF6\uFF0C\u540E\u6765\u6709\u4E86sentinel\u7B49\u5176\u4ED6\u7194\u65AD\u7EC4\u4EF6\uFF0C
# \u5728\u6709\u5F97\u9009\u62E9\u7684\u60C5\u51B5\u4E0B\uFF0CSpringCloud\u628A\u9009\u62E9\u6743\u4EA4\u7ED9\u4E86\u4F7F\u7528\u8005
feign.hystrix.enabled=true

# hystrix\u7684\u5168\u5C40\u63A7\u5236
# default\u662F\u5168\u5C40\u63A7\u5236\uFF0C\u4E5F\u53EF\u4EE5\u6362\u6210\u5355\u4E2A\u65B9\u6CD5\u63A7\u5236\uFF0C\u628Adefault\u6362\u6210\u65B9\u6CD5\u540D\u5373\u53EF
# circuitBreaker\u65AD\u8DEF\u5668\u914D\u7F6E
# \u5F00\u542F\u65AD\u8DEF\u5668
hystrix.command.default.circuitBreaker.enabled=true
# \u5931\u8D25\u6B21\u6570\uFF08\u9600\u503C\uFF09
hystrix.command.default.circuitBreaker.requestVolumeThreshold=3
# \u7A97\u53E3\u65F6\u95F4
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=20000
# \u5931\u8D25\u7387
hystrix.command.default.circuitBreaker.errorThresholdPercentage=60
# isolation\u9694\u79BB\u914D\u7F6E
# \u9694\u79BB\u65B9\u5F0F thread\u7EBF\u7A0B\u9694\u79BB\u548Csemaphore\u4FE1\u53F7\u91CF\u9694\u79BB
hystrix.command.default.execution.isolation.Strategy=thread
# \u7EBF\u7A0B\u9694\u79BB\u7194\u65AD\u914D\u7F6E\uFF0C\u8C03\u7528\u8D85\u65F6\u65F6\u957F
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=3000
# \u4FE1\u53F7\u91CF\u9694\u79BB\u7194\u65AD\u914D\u7F6E\uFF0C\u4FE1\u53F7\u91CF\u9694\u79BB\u6700\u5927\u5E76\u53D1\u6570
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests=1000

# Hystrix\u4E24\u79CD\u9694\u79BB\u65B9\u5F0F\uFF1A

# thread\u7EBF\u7A0B\u6C60 \u6309\u7167group\uFF0810\u4E2A\u7EBF\u7A0B\uFF09\u5212\u5206\u670D\u52A1\u63D0\u4F9B\u8005\uFF0C\u7528\u6237\u8BF7\u6C42\u7684\u7EBF\u7A0B\u548C\u505A\u8FDC\u7A0B\u7684\u7EBF\u7A0B\u4E0D\u4E00\u6837
# \u597D\u5904\uFF1A\u5F53B\u670D\u52A1\u8C03\u7528\u5931\u8D25\u4E86 \u6216\u8005\u8BF7\u6C42B\u670D\u52A1\u7684\u91CF\u592A\u5927\u4E86 \u4E0D\u4F1A\u5BF9C\u670D\u52A1\u9020\u6210\u5F71\u54CD
# \u7528\u6237\u8BBF\u95EE\u6BD4\u8F83\u5927\u7684\u60C5\u51B5\u4E0B\u4F7F\u7528\u6BD4\u8F83\u597D  \u5F02\u6B65\u7684\u65B9\u5F0F
# \u7F3A\u70B9\uFF1A\u7EBF\u7A0B\u95F4\u5207\u6362\u5F00\u9500\u5927\uFF0C\u5BF9\u673A\u5668\u6027\u80FD\u5F71\u54CD
# \u5E94\u7528\u573A\u666F \u8C03\u7528\u7B2C\u4E09\u65B9\u670D\u52A1 \u5E76\u53D1\u91CF\u5927\u7684\u60C5\u51B5\u4E0B

# semaphore\u4FE1\u53F7\u91CF\u9694\u79BB \u6BCF\u6B21\u8BF7\u8FDB\u6765 \u6709\u4E00\u4E2A\u539F\u5B50\u8BA1\u6570\u5668 \u505A\u8BF7\u6C42\u6B21\u6570\u7684++  \u5F53\u8BF7\u6C42\u5B8C\u6210\u4EE5\u540E --
# \u597D\u5904 \u5BF9cpu\u5F00\u9500\u5C0F
# \u7F3A\u70B9 \u5E76\u53D1\u8BF7\u6C42\u4E0D\u6613\u592A\u591A \u5F53\u8BF7\u6C42\u8FC7\u591A \u5C31\u4F1A\u62D2\u7EDD\u8BF7\u6C42 \u505A\u4E00\u4E2A\u4FDD\u62A4\u673A\u5236
# \u573A\u666F \u4F7F\u7528\u5185\u90E8\u8C03\u7528 \uFF0C\u5E76\u53D1\u5C0F\u7684\u60C5\u51B5\u4E0B
# \u6E90\u7801\u5165\u95E8  HystrixCommand  AbstractCommand HystrixThreadPool

# sleuth\u94FE\u8DEF\u8FFD\u8E2A\u914D\u7F6E
spring.zipkin.base-url=http://localhost:9411
# \u914D\u7F6E\u91C7\u6837\u7387\u9ED8\u8BA4\u7684\u91C7\u6837\u6BD4\u4F8B\u4E3A: 0.1\uFF0C\u537310%\uFF0C\u6240\u8BBE\u7F6E\u7684\u503C\u4ECB\u4E8E0 \u52301 \u4E4B\u95F4\uFF0C1 \u5219\u8868\u793A\u5168\u90E8\u91C7\u96C6
spring.zipkin.sleuth.sampler.probability=1
# \u4E3A\u4E86\u4F7F\u7528\u901F\u7387\u9650\u5236\u91C7\u6837\u5668,\u9009\u62E9\u6BCF\u79D2\u95F4\u9694\u63A5\u53D7\u7684trace\u8FFD\u8E2A\u91CF\uFF0C\u6700\u5C0F\u6570\u5B57\u4E3A0\uFF0C\u6700\u5927\u503C\u4E3A2,147,483,647\uFF08\u6700\u5927int\uFF09 \u9ED8\u8BA4\u4E3A10\u3002
spring.zipkin.sleuth.sampler.rate=10

# \u66B4\u9732\u4FE1\u606F\u7ED9\u76D1\u63A7
management.endpoints.web.exposure.include=*
